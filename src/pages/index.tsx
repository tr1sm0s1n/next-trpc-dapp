import Head from "next/head";
import { KeyboardEvent, useState } from "react";
import {
  Input,
  FormControl,
  Container,
  Heading,
  Select,
  Button,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalCloseButton,
  useDisclosure,
  ModalBody,
} from "@chakra-ui/react";
import { trpc } from "@/utils/trpc";

export default function Home() {
  const [id, setId] = useState<number | null>(null);
  const [name, setName] = useState("");
  const [course, setCourse] = useState("");
  const [grade, setGrade] = useState("");
  const [date, setDate] = useState("");

  const [param, setParam] = useState<number | null>(null);

  const { isOpen: isM1, onOpen: openM1, onClose: closeM1 } = useDisclosure();
  const { isOpen: isM2, onOpen: openM2, onClose: closeM2 } = useDisclosure();

  const issue = trpc.issue.useMutation();
  const fetch = trpc.fetch.useQuery({ id: param });

  const handleSubmit = async () => {
    const certificate = {
      id,
      name,
      course,
      grade,
      date,
    };
    console.log(certificate);
    issue.mutate(certificate);
    openM1();
    setId(null);
    setName("");
    setCourse("");
    setGrade("");
    setDate("");
  };

  const handleSearch = async (e: KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      setParam(Number(e.currentTarget.value));
      openM2();
      console.log(fetch.data);
      console.log("trgieer");
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <Container centerContent>
          <Heading as="h2" size="xl" my={4} noOfLines={1}>
            Certificate DApp
          </Heading>
          <Heading as="h4" size="md" my={2} noOfLines={1}>
            Issue Certificate
          </Heading>
          <FormControl my={2}>
            <Input
              type="number"
              min={0}
              placeholder="Enter Certificate ID"
              onChange={(e) => setId(Number(e.currentTarget.value))}
              value={id ? id : ""}
            />
          </FormControl>
          <FormControl my={2}>
            <Input
              type="text"
              placeholder="Enter Candidate Name"
              onChange={(e) => setName(e.currentTarget.value)}
              value={name}
            />
          </FormControl>
          <Select
            my={2}
            onChange={(e) => setCourse(e.currentTarget.value)}
            value={course}
          >
            <option hidden>Select Course</option>
            <option value="CBA">Certified Blockchain Associate</option>
            <option value="CED">Certified Ethereum Developer</option>
            <option value="CHF">Certified Hyperledger Fabric Developer</option>
            <option value="CBR">Certified Blockchain Architect</option>
          </Select>
          <Select
            my={2}
            onChange={(e) => setGrade(e.currentTarget.value)}
            value={grade}
          >
            <option hidden>Select Grade</option>
            <option value="S">S</option>
            <option value="A">A</option>
            <option value="B">B</option>
            <option value="C">C</option>
          </Select>
          <FormControl my={2}>
            <Input
              type="date"
              onChange={(e) => setDate(e.currentTarget.value)}
              value={date}
            />
          </FormControl>
          <Button
            my={2}
            colorScheme="teal"
            type="submit"
            onClick={handleSubmit}
          >
            Submit
          </Button>
        </Container>
      </section>
      <section>
        <Container centerContent my={8}>
          <Heading as="h4" size="md" my={2} noOfLines={1}>
            Fetch Certificate
          </Heading>
          <FormControl my={2}>
            <Input
              type="number"
              min={0}
              placeholder="Enter Certificate ID"
              onKeyDown={handleSearch}
              // value={param ? param : ""}
            />
          </FormControl>
        </Container>
      </section>
      <Modal isOpen={isM1} onClose={closeM1}>
        <ModalOverlay />
        {issue.isSuccess ? (
          <ModalContent>
            <ModalHeader>Success</ModalHeader>
            <ModalCloseButton />
            <ModalBody>{issue.data?.message}</ModalBody>
          </ModalContent>
        ) : (
          <ModalContent>
            <ModalHeader>Error</ModalHeader>
            <ModalCloseButton />
            <ModalBody>{issue.error?.message}</ModalBody>
          </ModalContent>
        )}
      </Modal>
      <Modal isOpen={isM2} onClose={closeM2}>
        <ModalOverlay />
        {fetch.isSuccess && (
          <ModalContent>
            <ModalHeader mx={"auto"}>Certificate</ModalHeader>
            <ModalCloseButton />
            <ModalBody>
              <Container centerContent>
                <p>Name: {fetch.data?.name}</p>
                <p>Course: {fetch.data?.course}</p>
                <p>Grade: {fetch.data?.grade}</p>
                <p>ID: {fetch.data?.id}</p>
                <p>Date: {fetch.data?.date}</p>
              </Container>
            </ModalBody>
          </ModalContent>
        )}
      </Modal>
    </>
  );
}
